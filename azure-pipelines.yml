# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
 batch: true
 branches:
    include:
      - "*"

workspace:
  clean: all

variables:
  buildConfiguration: 'release'

pool:
  vmImage: ubuntu-latest

steps:
- task: DotNetCoreCLI@2
  displayName: dotnet restore
  inputs:
    command: restore
    projects: 'src/**/*.csproj'
    noCache: true

- task: DotNetCoreCLI@2
  displayName: dotnet build
  inputs:
    projects: 'src/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --no-restore'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    projects: 'src/**/*.csproj'
    packDirectory: '$(build.artifactstagingdirectory)/publish'
    arguments: '--configuration $(buildConfiguration) --no-restore'

- task: DotNetCoreCLI@2
  displayName: 'dotnet publish'
  inputs:
    command: publish
    publishWebProjects: false
    zipAfterPublish: false
    projects: 'src/**/*Tests.csproj'
    arguments: '--configuration $(buildConfiguration) --output $(build.artifactstagingdirectory)/tests --no-restore --no-build'
    
- task: CopyFiles@2
  displayName: 'Copy Check-TestResults.ps1 to: $(build.artifactstagingdirectory)'
  inputs:
    Contents: |     
     src/**/Check-TestResults.ps1
    TargetFolder: '$(build.artifactstagingdirectory)/publish'
    OverWrite: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    pathtoPublish: '$(build.artifactstagingdirectory)/publish'